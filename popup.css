/* Base Styles for FetchMark - Dark Mode */

/* Dark Mode Color Variables */
:root {
    --dark-bg-primary: #0f172a;      /* slate-900 */ 
    --dark-bg-secondary: #1e293b;    /* slate-800 */
    --dark-bg-tertiary: #334155;     /* slate-700 */
    --dark-text-primary: #f1f5f9;    /* slate-100 */
    --dark-text-secondary: #cbd5e1;  /* slate-300 */
    --dark-text-muted: #94a3b8;      /* slate-400 */
    --dark-border: #334155;          /* slate-700 */
    --accent-primary: #06b6d4;       /* cyan-500 */
    --accent-secondary: #2563eb;     /* blue-600 */
  }
  
  body.dark {
    background-color: var(--dark-bg-primary);
    color: var(--dark-text-primary);
    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
  }
  
  /* Typography Enhancements */
  h1, h2, h3 {
    letter-spacing: -0.025em;
  }
  
  /* Custom Scrollbar for Dark Mode */
  .custom-scrollbar-dark::-webkit-scrollbar {
    width: 6px;
  }
  
  .custom-scrollbar-dark::-webkit-scrollbar-track {
    background: transparent;
    margin-top: 5px;
    margin-bottom: 5px;
  }
  
  .custom-scrollbar-dark::-webkit-scrollbar-thumb {
    background-color: rgba(100, 116, 139, 0.5); /* slate-500 with opacity */
    border-radius: 10px;
  }
  
  .custom-scrollbar-dark::-webkit-scrollbar-thumb:hover {
    background-color: rgba(148, 163, 184, 0.8); /* slate-400 with opacity */
  }
  
  /* Dark Mode Skeleton Loader Styles */
  .skeleton-card-dark {
    background-color: var(--dark-bg-secondary);
    border-radius: 0.75rem; /* rounded-xl */
    height: 68px;
    animation: pulse-dark 1.5s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
  
  @keyframes pulse-dark {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.4;
    }
  }
  
  /* Result Card Animations */
  .result-card-dark {
    opacity: 0;
    transform: translateY(10px);
    animation: fade-slide-in 0.4s ease-out forwards;
    transition: transform 0.2s ease-out, 
                box-shadow 0.2s ease-out, 
                background-color 0.2s ease-out;
  }
  
  .result-card-dark:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
  }
  
  @keyframes fade-slide-in {
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  /* General fade-in animation for views (main, settings, onboarding container) */
  @keyframes view-fade-in {
    from { opacity: 0; transform: scale(0.98); }
    to { opacity: 1; transform: scale(1); }
  }
  
  .view-animate-fade-in {
    animation: view-fade-in 0.25s ease-out forwards;
    /* Ensure hidden views don't interfere before animation */
    /* position: absolute; top:0; left:0; right:0; bottom:0; */ /* This might be too aggressive if views have different heights */
  }
  
  /* Onboarding step transitions */
  .onboarding-step {
    transition: opacity 0.3s ease-out, transform 0.3s ease-out;
    will-change: opacity, transform;
  }

  .onboarding-step.hidden-step {
    opacity: 0;
    transform: translateX(-20px); /* Slide out to the left */
    position: absolute; /* Take out of flow when hidden to prevent scrollbars */
    pointer-events: none;
  }

  .onboarding-step.visible-step {
    opacity: 1;
    transform: translateX(0); /* Slide in from the right or stay */
    position: relative; /* Back in flow */
  }
  
  /* Ask Button Loading State */
  .ask-button .icon {
    transition: opacity 0.2s ease-in-out, transform 0.2s ease-out;
  }
  
  .ask-button:hover .icon:not(.hidden) {
    transform: scale(1.1);
  }
  
  .ask-button.loading #askIconPaw {
    opacity: 0;
    position: absolute; /* Prevent layout shift */
  }
  
  .ask-button.loading #askIconSpinner {
    opacity: 1;
    position: relative; /* Take up space */
  }
  
  .ask-button #askIconSpinner {
    opacity: 0;
    position: absolute; /* Hidden by default */
  }
  
  /* Enhanced Focus visible styles for dark mode */
  *:focus-visible {
    outline: 2px solid var(--accent-primary) !important; /* Use CSS variable, !important to override Tailwind if needed */
    outline-offset: 2px;
    box-shadow: 0 0 0 3px rgba(6, 182, 212, 0.3); /* Softer outer glow */
  }
  
  /* Remove default browser focus outline if using custom for non-focus-visible capable browsers or specific needs */
  *:focus {
    outline: none; /* Generally okay if :focus-visible is well defined */
  }
  
  /* Input field and Select enhancements */
  input[type="text"],
  input[type="password"],
  select {
    transition: all 0.2s ease;
    border-color: var(--dark-border);
  }
  
  input[type="text"]:focus,
  input[type="password"]:focus,
  select:focus {
    border-color: var(--accent-primary);
    box-shadow: 0 0 0 2px rgba(6, 182, 212, 0.5); /* cyan-500 with opacity */
  }

  /* Style for the active search provider dropdown */
  #searchProviderSelect.provider-active {
    border-color: var(--accent-primary);
    /* box-shadow: 0 0 0 1px var(--accent-primary); // Optional: subtle glow */
  }
  
  #searchProviderSelect.provider-active:focus {
    border-color: var(--accent-primary);
    box-shadow: 0 0 0 2px rgba(6, 182, 212, 0.5); /* Keep focus style consistent */
  }
  
  /* Status message enhancements */
  #statusMessageApp {
    transition: opacity 0.3s ease;
  }
  
  /* Setting toggle button and inputs */
  #toggleKeyVisibilityBtn svg {
    transition: color 0.2s ease;
  }
  
  #toggleKeyVisibilityBtn:hover svg {
    color: white;
  }
  
  /* Settings view styling */
  #settingsView .bg-slate-800 {
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    border: 1px solid var(--dark-border); /* Add a subtle border to sections */
  }
  
  #settingsView .bg-slate-800:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    border-color: var(--dark-bg-tertiary);
  }

  #settingsView > div:first-child { /* Header */
    margin-bottom: 1.25rem; /* Slightly more space below settings header */
  }

  #settingsView .space-y-6 > div:not(:last-child) { /* Space between setting cards */
    margin-bottom: 1.5rem; 
  }

  /* Save Settings Button loading/saved state */
  #saveSettingsBtn:disabled {
    background-image: none; /* Remove gradient if it was there */
    background-color: var(--dark-bg-tertiary); /* A slightly active disabled color */
    opacity: 0.7;
    cursor: wait; /* Indicate processing */
  }
  
  /* Button pulse animation for important actions */
  @keyframes button-pulse {
    0% {
      box-shadow: 0 0 0 0 rgba(6, 182, 212, 0.7);
    }
    70% {
      box-shadow: 0 0 0 10px rgba(6, 182, 212, 0);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(6, 182, 212, 0);
    }
  }
  
  .pulse-animation {
    animation: button-pulse 1.5s infinite;
  }
  
  /* Enhanced Toast notification styling */
  .toast-notification {
    position: fixed; /* Use fixed to ensure it's always visible within the popup's viewport */
    bottom: 16px; /* Adjust as needed */
    left: 50%;
    transform: translateX(-50%) translateY(100%); /* Start off-screen */
    min-width: 200px;
    padding: 10px 16px;
    border-radius: 6px;
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.3);
    color: var(--dark-text-primary);
    font-size: 0.875rem; /* 14px */
    z-index: 1000;
    opacity: 0;
    transition: opacity 0.3s ease, transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
    text-align: center;
  }
  
  .toast-notification.show {
    opacity: 1;
    transform: translateX(-50%) translateY(0);
  }
  
  .toast-notification.hide {
    opacity: 0;
    transform: translateX(-50%) translateY(100%);
  }

  .toast-success {
    background-color: #059669; /* Tailwind green-600 */ 
    border-left: 4px solid #047857; /* Tailwind green-700 */
  }

  .toast-error {
    background-color: #dc2626; /* Tailwind red-600 */
    border-left: 4px solid #b91c1c; /* Tailwind red-700 */
  }
  
  /* General Hover/Active effect for buttons */
  button:not([disabled]) {
    transition: transform 0.15s ease, background-color 0.2s ease, box-shadow 0.2s ease, opacity 0.2s ease;
  }
  
  button:not([disabled]):hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.15);
    opacity: 0.92;
  }

  button:not([disabled]):active {
    transform: scale(0.97) translateY(0px);
    opacity: 1;
  }

  /* Specific hover for Ask button (already has gradient) */
  #askButtonApp:not([disabled]):hover {
    opacity: 1; /* Keep gradient fully opaque */
    /* transform handled by existing .ask-button:hover .icon */
  }

  /* Refresh button animation */
  #refreshBtnApp.refreshing svg {
    animation: spin 1s linear infinite;
  }

  @keyframes spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }
  
  /* Ensure result card hover is distinct */
  .result-card-dark:hover {
    background-color: var(--dark-bg-tertiary); /* Slightly lighter than slate-800 for hover */
    transform: translateY(-2px) scale(1.01);
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.25);
  }